<?php

/**
 * @file hide_revision_field.module
 * Manages hiding revision information fields on Node edit/create forms.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\NodeType;
use Drupal\node\NodeTypeInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter node type forms to add checkbox to control visibility of revision
 * information per node type.
 */
function hide_revision_field_form_node_type_form_alter(&$form, FormStateInterface $form_state) {
  $form['workflow']['hide_revision_field'] = [
    '#type' => 'checkbox',
    '#title' => t('Hide Revision Dialogue'),
    '#default' => $form_state->getFormObject()->getEntity()->getThirdPartySetting('hide_revision_field', 'hide', 0),
  ];

  $form['#entity_builders'][] = 'hide_revision_field_form_node_type_form_builder';
}

/**
 * Entity form builder for node type forms to save value to 3rd party settings.
 */
function hide_revision_field_form_node_type_form_builder($entity_type, NodeTypeInterface $type, &$form, FormStateInterface $form_state) {
  $type->setThirdPartySetting('hide_revision_field', 'hide', $form_state->getValue('hide_revision_field'));
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Manages the actual hiding of the revision information fields if required.
 */
function hide_revision_field_form_node_form_alter(&$form, FormStateInterface $form_state) {
  $node_type = NodeType::load($form_state->getFormObject()->getEntity()->bundle());
  if ($node_type->getThirdPartySetting('hide_revision_field', 'hide')) {
    $form['revision_information']['#access'] = FALSE;
  }
}
